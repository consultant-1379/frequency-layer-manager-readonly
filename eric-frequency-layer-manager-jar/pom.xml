<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.ericsson.oss.services.sonom</groupId>
        <artifactId>eric-son-frequency-layer-manager</artifactId>
        <version>2.28.379-SNAPSHOT</version>
    </parent>

    <artifactId>eric-frequency-layer-manager-jar</artifactId>
    <name>[${project.parent.artifactId}] eric frequency layer manager JAR module</name>

    <dependencies>

        <!-- SON Dependencies -->
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>change-activation-service-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-cm-topology-model-sn-api-jar</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-cm-topology-model-sn-client-library</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.presentation.server.sonom</groupId>
            <artifactId>eric-cm-topology-model-sn-rest-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-frequency-layer-manager-api-jar</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-frequency-layer-manager-db-access</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-frequency-layer-manager-message-handler</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-pm-kpi-calculator-api-jar</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-pm-kpi-calculator-client-library</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-pm-kpi-calculator-rest-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-policy-engine-ax-client-library</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>son-common-activity-scheduler</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>son-common-env</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>son-common-resources</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>son-common-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>son-common-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>eric-policy-engine-ax-api-jar</artifactId>
            <version>${version.eric-policy-engine-ax}</version>
        </dependency>

        <!-- 3PP Dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- provided by Wildfly, override compile scope that coming from son-common -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Version below provided by Wildfly -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Version below provided by Wildfly -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>
        <!-- Version below provided by Wildfly -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <!-- Dependency below provided by Wildfly -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.github.java-json-tools</groupId>
            <artifactId>json-schema-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.java-json-tools</groupId>
            <artifactId>json-schema-validator</artifactId>
        </dependency>
        <!-- Dependency below provided by Wildfly -->
        <dependency>
            <!-- Dependency needed due to Javadoc issues when not included, since it is a dependency of eric-cm-topology-model-sn-rest-api -->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${version.jackson-annotations}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-circuitbreaker</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-retry</artifactId>
        </dependency>
        <!-- Dependency below provided by Wildfly -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
        </dependency>
              <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>com.github.java-json-tools</groupId>
          <artifactId>jackson-coreutils</artifactId>
          <version>2.0</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>com.ericsson.oss.services.sonom</groupId>
            <artifactId>son-common-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-reflect</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.powermock</groupId>
          <artifactId>powermock-core</artifactId>
          <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>test</phase>
                        <configuration>
                            <target>
                                <copy file="./src/main/resources/RequiredElements.json" todir="../testsuite/integration/jee/src/test/resources" overwrite="true" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>copy_required_kpis_for_test</id>
                        <phase>test</phase>
                        <configuration>
                            <target>
                                <copy file="./src/main/resources/RequiredKpis.json" todir="../testsuite/integration/jee/src/test/resources" overwrite="true" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <configuration>
                    <excludedMethods>
                        <!-- pit doesn't work well with time dependent test cases -->
                        <method>persistExecutionStatus</method>
                        <method>getTimeElapsedInMillis</method>
                    </excludedMethods>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>enforce-file-size</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireFilesSize>
                                    <maxsize>10000000</maxsize>
                                    <minsize>100</minsize>
                                    <files>
                                        <file>./src/main/resources/policy/FrequencyLayerManagerPolicy.json</file>
                                        <file>./src/main/resources/policy/PerformanceAssurancePolicy.json</file>
                                    </files>
                                </requireFilesSize>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
