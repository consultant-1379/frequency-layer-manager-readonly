-- Create private schema for service
CREATE SCHEMA IF NOT EXISTS flm;

DROP TABLE IF EXISTS public.configuration_settings;
DROP TABLE IF EXISTS public.flm_executions;
DROP TABLE IF EXISTS public.pa_executions;
DROP TABLE IF EXISTS public.cell_configuration;

CREATE TABLE IF NOT EXISTS flm.configuration_settings(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    schedule VARCHAR(100) NOT NULL,
    enabled BOOLEAN NOT NULL,
    open_loop boolean NOT NULL,
    customized_global_settings text NOT NULL,
    customized_default_settings text NOT NULL,
    groups text NOT NULL,
    inclusion_list text NOT NULL,
    exclusion_list text NOT NULL,
    weekend_days text NOT NULL,
    enable_pa boolean NOT NULL
);

CREATE TABLE IF NOT EXISTS flm.flm_executions(
    id VARCHAR(255) PRIMARY KEY,
    configuration_id bigint NOT NULL REFERENCES flm.configuration_settings(id) ON DELETE CASCADE,
    start_time TIMESTAMP,
    state VARCHAR(50),
    state_modified_time TIMESTAMP,
    additional_execution_information VARCHAR(255),
    schedule VARCHAR(100) NOT NULL,
    retry_attempts INTEGER,
    calculation_id VARCHAR(100),
    customized_global_settings text NOT NULL,
    customized_default_settings text NOT NULL,
    groups text NOT NULL,
    num_sectors_to_evaluate_for_optimization INTEGER,
    num_optimization_elements_sent INTEGER,
    num_optimization_elements_received INTEGER,
    num_optimization_lbqs INTEGER,
    num_changes_written_to_cm_db INTEGER,
    num_changes_not_written_to_cm_db INTEGER,
    open_loop boolean NOT NULL,
    inclusion_list text NOT NULL,
    exclusion_list text NOT NULL,
    weekend_days text NOT NULL,
    enable_pa boolean NOT NULL,
    full_execution boolean NOT NULL
);

CREATE TABLE IF NOT EXISTS flm.pa_executions(
    id VARCHAR(257) PRIMARY KEY,
    schedule VARCHAR(100) NOT NULL,
    pa_window INTEGER NOT NULL,
    pa_window_start_time TIMESTAMP NOT NULL,
    pa_window_end_time TIMESTAMP NOT NULL,
    state VARCHAR(50) NOT NULL,
    state_modified_time TIMESTAMP NOT NULL,
    flm_execution_id VARCHAR(255) NOT NULL REFERENCES flm.flm_executions(id) ON DELETE CASCADE,
    num_pa_policy_input_events_sent INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS flm.cell_configuration(
    id bigint PRIMARY KEY,
    oss_id integer NOT NULL,
    fdn varchar NOT NULL,
    execution_id VARCHAR(255) NOT NULL REFERENCES flm.flm_executions(id) ON DELETE CASCADE,
    configuration_id int NOT NULL REFERENCES flm.configuration_settings(id),
    qos_for_capacity_estimation float NOT NULL,
    percentile_for_max_connected_user integer NOT NULL,
    min_num_cell_for_cdf_calculation integer NOT NULL,
    target_throughput_r float NOT NULL,
    delta_gfs_optimization_threshold float NOT NULL,
    target_source_coverage_balance_ratio_threshold float NOT NULL,
    source_target_samples_overlap_threshold float NOT NULL,
    target_source_contiguity_ratio_threshold float NOT NULL,
    lb_threshold_for_initial_erab_estab_succ_rate float NOT NULL,
    lb_threshold_for_initial_erab_estab_succ_rate_for_qci1 float NOT NULL,
    lb_threshold_for_erab_percentage_lost float NOT NULL,
    lb_threshold_for_erab_percentage_lost_for_qci1 float NOT NULL,
    lb_threshold_for_cell_ho_succ_rate float NOT NULL,
    lb_threshold_for_cell_availability float NOT NULL,
    optimization_speed VARCHAR(6) NOT NULL,
    optimization_speed_factor_table VARCHAR (30) NOT NULL,
    bandwidth_to_step_size_table VARCHAR (60) NOT NULL,
    lb_threshold_for_endc_users float NOT NULL,
    ess_enabled BOOLEAN NOT NULL,
    num_calls_cell_hourly_reliability_threshold_in_hours integer NOT NULL,
    synthetic_counters_cell_reliability_threshold_in_rops integer NOT NULL,
    exclusion_list text,
    min_rops_for_app_cov_reliability int NOT NULL,
    min_num_cqi_samples int NOT NULL,
    min_num_samples_for_transient_calculation int NOT NULL,
    sigma_for_transient_calculation int NOT NULL,
    uplink_pusch_sinr_ratio_threshold float NOT NULL,
    min_target_uplink_pusch_sinr int NOT NULL,
    percentage_bad_rsrp_ratio_threshold float NOT NULL,
    min_connected_users int NOT NULL,
    minimum_source_retained int NOT NULL,
    sector_id bigint
);

CREATE TABLE IF NOT EXISTS flm.cell_configuration_history(
    id bigint NOT NULL,
    oss_id INTEGER NOT NULL,
    fdn VARCHAR NOT NULL,
    execution_id bigint NOT NULL,
    created TIMESTAMP NOT NULL,
    qos_for_capacity_estimation float NOT NULL,
    percentile_for_max_connected_user integer NOT NULL,
    min_num_cell_for_cdf_calculation integer NOT NULL,
    target_throughput_r FLOAT NOT NULL,
    delta_gfs_optimization_threshold float NOT NULL,
    target_source_coverage_balance_ratio_threshold float NOT NULL,
    source_target_samples_overlap_threshold float NOT NULL,
    target_source_contiguity_ratio_threshold float NOT NULL,
    lb_threshold_for_initial_erab_estab_succ_rate float NOT NULL,
    lb_threshold_for_initial_erab_estab_succ_rate_for_qci1 float NOT NULL,
    lb_threshold_for_erab_percentage_lost float NOT NULL,
    lb_threshold_for_erab_percentage_lost_for_qci1 float NOT NULL,
    lb_threshold_for_cell_ho_succ_rate float NOT NULL,
    lb_threshold_for_cell_availability float NOT NULL,
    optimization_speed VARCHAR(6) NOT NULL,
    optimization_speed_factor_table VARCHAR (30) NOT NULL,
    bandwidth_to_step_size_table VARCHAR (60) NOT NULL,
    lb_threshold_for_endc_users float NOT NULL,
    ess_enabled BOOLEAN NOT NULL,
    num_calls_cell_hourly_reliability_threshold_in_hours integer NOT NULL,
    synthetic_counters_cell_reliability_threshold_in_rops integer NOT NULL,
    exclusion_list text,
    min_rops_for_app_cov_reliability int NOT NULL,
    min_num_cqi_samples int NOT NULL,
    min_num_samples_for_transient_calculation int NOT NULL,
    sigma_for_transient_calculation int NOT NULL,
    uplink_pusch_sinr_ratio_threshold float NOT NULL,
    min_target_uplink_pusch_sinr int NOT NULL,
    percentage_bad_rsrp_ratio_threshold float NOT NULL,
    min_connected_users int NOT NULL,
    minimum_source_retained int NOT NULL,
    sector_id bigint,
    UNIQUE(oss_id, fdn, execution_id),
    UNIQUE(id, execution_id)
);

CREATE TABLE IF NOT EXISTS flm.pa_output_events(
    flm_execution_id VARCHAR(255),
    pa_execution_id VARCHAR(257),
    pa_window INTEGER,
    sector_id bigint,
    degradation_status json,
    PRIMARY KEY(pa_execution_id, sector_id)
);

CREATE TABLE IF NOT EXISTS flm.flm_optimizations(
    execution_id VARCHAR(255),
    sector_id bigint,
    lbq json,
    created TIMESTAMP NOT NULL,
    PRIMARY KEY(execution_id, sector_id)
);

CREATE TABLE IF NOT EXISTS flm.flm_lbdar (
    execution_id VARCHAR(255) NOT NULL,
    sector_id BIGINT NOT NULL,
    leakage_cells JSON NOT NULL DEFAULT '[]'::JSON,
    PRIMARY KEY(execution_id, sector_id),
    CONSTRAINT flm_lbdar_flm_execution_id_fkey FOREIGN KEY(execution_id) REFERENCES flm.flm_executions(id) ON DELETE CASCADE
);

ALTER TABLE flm.pa_executions ADD COLUMN IF NOT EXISTS num_pa_policy_input_events_sent integer NOT NULL DEFAULT 0;

ALTER TABLE flm.configuration_settings ADD COLUMN IF NOT EXISTS customized_global_settings text NOT NULL DEFAULT '{}';
ALTER TABLE flm.configuration_settings ADD COLUMN IF NOT EXISTS open_loop boolean NOT NULL DEFAULT true;
ALTER TABLE flm.configuration_settings ADD COLUMN IF NOT EXISTS inclusion_list text NOT NULL DEFAULT '[]';
ALTER TABLE flm.configuration_settings ADD COLUMN IF NOT EXISTS exclusion_list text NOT NULL DEFAULT '[]';
ALTER TABLE flm.configuration_settings ADD COLUMN IF NOT EXISTS weekend_days text NOT NULL DEFAULT 'Saturday,Sunday';
ALTER TABLE flm.configuration_settings ADD COLUMN IF NOT EXISTS enable_pa boolean NOT NULL DEFAULT false;

ALTER TABLE flm.cell_configuration_history ALTER COLUMN execution_id TYPE VARCHAR(255);

ALTER TABLE flm.flm_executions DROP CONSTRAINT IF EXISTS flm_executions_configuration_id_fkey;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS customized_global_settings text NOT NULL DEFAULT '{}';
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS customized_default_settings text NOT NULL DEFAULT '{}';
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS groups text NOT NULL DEFAULT '[]';
-- As discussed with PO, num_sectors_to_evaluate_for_optimization, num_optimization_lbqs, num_changes_written_to_cm_db
-- and num_changes_not_written_to_cm_db will return 0 for executions run on 21.06 version of FLM, as they were not released
-- until 21.07.
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS num_sectors_to_evaluate_for_optimization INTEGER;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS num_optimization_elements_sent INTEGER;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS num_optimization_elements_received INTEGER;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS num_optimization_lbqs INTEGER;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS num_changes_written_to_cm_db INTEGER;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS num_changes_not_written_to_cm_db INTEGER;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS open_loop boolean NOT NULL DEFAULT true;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS inclusion_list text NOT NULL DEFAULT '[]';
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS exclusion_list text NOT NULL DEFAULT '[]';
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS weekend_days text NOT NULL DEFAULT 'Saturday,Sunday';
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS enable_pa boolean NOT NULL DEFAULT false;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS full_execution boolean NOT NULL DEFAULT true;
ALTER TABLE flm.flm_executions ADD COLUMN IF NOT EXISTS additional_execution_information VARCHAR(255);

ALTER TABLE flm.cell_configuration DROP CONSTRAINT IF EXISTS cell_configuration_configuration_id_fkey;
ALTER TABLE flm.cell_configuration DROP CONSTRAINT IF EXISTS cell_configuration_pkey;
ALTER TABLE flm.cell_configuration ADD PRIMARY KEY(id, execution_id);
ALTER TABLE flm.cell_configuration ALTER COLUMN fdn TYPE VARCHAR;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS qos_for_capacity_estimation float NOT NULL DEFAULT 0.5;
ALTER TABLE flm.cell_configuration ALTER COLUMN IF EXISTS percentile_for_max_connected_user float NOT NULL DEFAULT 40.0;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS percentile_for_max_connected_user float NOT NULL DEFAULT 40.0;
ALTER TABLE flm.cell_configuration ALTER COLUMN IF EXISTS min_num_cell_for_cdf_calculation integer NOT NULL DEFAULT 20;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS min_num_cell_for_cdf_calculation integer NOT NULL DEFAULT 20;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS delta_gfs_optimization_threshold float NOT NULL DEFAULT 0.3;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS target_source_coverage_balance_ratio_threshold float NOT NULL DEFAULT 0.9;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS source_target_samples_overlap_threshold float NOT NULL DEFAULT 70.0;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS target_source_contiguity_ratio_threshold float NOT NULL DEFAULT 0.9;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS lb_threshold_for_initial_erab_estab_succ_rate float NOT NULL DEFAULT 98.0;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS lb_threshold_for_initial_erab_estab_succ_rate_for_qci1 float NOT NULL DEFAULT 98.5;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS lb_threshold_for_erab_percentage_lost float NOT NULL DEFAULT 2.0;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS lb_threshold_for_erab_percentage_lost_for_qci1 float NOT NULL DEFAULT 1.5;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS lb_threshold_for_cell_ho_succ_rate float NOT NULL DEFAULT 70.0;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS lb_threshold_for_cell_availability float NOT NULL DEFAULT 70.0;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS optimization_speed VARCHAR(6) NOT NULL DEFAULT 'normal';
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS optimization_speed_factor_table VARCHAR(30) NOT NULL DEFAULT 'slow=6, normal=4, fast=2';
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS bandwidth_to_step_size_table VARCHAR(60) NOT NULL DEFAULT '1400=1, 3000=1, 5000=2, 10000=4, 15000=5, 20000=10';
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS lb_threshold_for_endc_users float NOT NULL DEFAULT 50.0;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS ess_enabled BOOLEAN NOT NULL DEFAULT true;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS num_calls_cell_hourly_reliability_threshold_in_hours integer NOT NULL DEFAULT 20;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS synthetic_counters_cell_reliability_threshold_in_rops integer NOT NULL DEFAULT 72;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS exclusion_list text;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS min_rops_for_app_cov_reliability integer NOT NULL DEFAULT 3;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS min_num_cqi_samples integer NOT NULL DEFAULT 100;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS min_num_samples_for_transient_calculation integer NOT NULL DEFAULT 15;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS sigma_for_transient_calculation integer NOT NULL DEFAULT 3;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS minimum_source_retained int NOT NULL DEFAULT 20;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS sector_id bigint;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS uplink_pusch_sinr_ratio_threshold float NOT NULL DEFAULT 0.8;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS min_target_uplink_pusch_sinr integer NOT NULL DEFAULT 5;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS percentage_bad_rsrp_ratio_threshold float NOT NULL DEFAULT 1.2;
ALTER TABLE flm.cell_configuration ADD COLUMN IF NOT EXISTS min_connected_users integer NOT NULL DEFAULT 10;

ALTER TABLE flm.cell_configuration DROP COLUMN IF EXISTS lbt_for_initial_and_added_erab_estab_succ_rate CASCADE;
ALTER TABLE flm.cell_configuration DROP COLUMN IF EXISTS lbt_for_initial_and_added_erab_estab_succ_rate_for_qci1 CASCADE;
ALTER TABLE flm.cell_configuration DROP COLUMN IF EXISTS load_balancing_threshold_for_erab_percentage_lost CASCADE;
ALTER TABLE flm.cell_configuration DROP COLUMN IF EXISTS load_balancing_threshold_for_erab_percentage_lost_for_qci1 CASCADE;
ALTER TABLE flm.cell_configuration DROP COLUMN IF EXISTS load_balancing_threshold_for_cell_ho_succ_rate CASCADE;
ALTER TABLE flm.cell_configuration DROP COLUMN IF EXISTS load_balancing_threshold_for_cell_availability CASCADE;
ALTER TABLE flm.cell_configuration DROP COLUMN IF EXISTS load_balancing_threshold_for_cell_availability CASCADE;
ALTER TABLE flm.cell_configuration DROP COLUMN IF EXISTS load_balancing_threshold_for_endc_users CASCADE;

ALTER TABLE flm.cell_configuration_history ALTER COLUMN fdn TYPE VARCHAR;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS qos_for_capacity_estimation float NOT NULL DEFAULT 0.5;
ALTER TABLE flm.cell_configuration_history ALTER COLUMN IF EXISTS percentile_for_max_connected_user float NOT NULL DEFAULT 40.0;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS percentile_for_max_connected_user float NOT NULL DEFAULT 40.0;
ALTER TABLE flm.cell_configuration_history ALTER COLUMN IF EXISTS min_num_cell_for_cdf_calculation integer NOT NULL DEFAULT 20;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS min_num_cell_for_cdf_calculation integer NOT NULL DEFAULT 20;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS delta_gfs_optimization_threshold float NOT NULL DEFAULT 0.3;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS target_source_coverage_balance_ratio_threshold float NOT NULL DEFAULT 0.9;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS source_target_samples_overlap_threshold float NOT NULL DEFAULT 70.0;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS target_source_contiguity_ratio_threshold float NOT NULL DEFAULT 0.9;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS lb_threshold_for_initial_erab_estab_succ_rate float NOT NULL DEFAULT 98.0;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS lb_threshold_for_initial_erab_estab_succ_rate_for_qci1 float NOT NULL DEFAULT 98.5;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS lb_threshold_for_erab_percentage_lost float NOT NULL DEFAULT 2;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS lb_threshold_for_erab_percentage_lost_for_qci1 float NOT NULL DEFAULT 1.5;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS lb_threshold_for_cell_ho_succ_rate float NOT NULL DEFAULT 70.0;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS lb_threshold_for_cell_availability float NOT NULL DEFAULT 70.0;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS optimization_speed VARCHAR(6) NOT NULL DEFAULT 'normal';
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS optimization_speed_factor_table VARCHAR(30) NOT NULL DEFAULT 'slow=6, normal=4, fast=2';
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS bandwidth_to_step_size_table VARCHAR(60) NOT NULL DEFAULT '1400=1, 3000=1, 5000=2, 10000=4, 15000=5, 20000=10';
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS lb_threshold_for_endc_users float NOT NULL DEFAULT 50.0;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS ess_enabled  BOOLEAN NOT NULL DEFAULT true;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS num_calls_cell_hourly_reliability_threshold_in_hours integer NOT NULL DEFAULT 20;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS synthetic_counters_cell_reliability_threshold_in_rops integer NOT NULL DEFAULT 72;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS exclusion_list text;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS min_rops_for_app_cov_reliability integer NOT NULL DEFAULT 3;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS min_num_cqi_samples integer NOT NULL DEFAULT 100;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS min_num_samples_for_transient_calculation integer NOT NULL DEFAULT 15;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS sigma_for_transient_calculation integer NOT NULL DEFAULT 3;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS minimum_source_retained int NOT NULL DEFAULT 20;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS sector_id bigint;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS uplink_pusch_sinr_ratio_threshold float NOT NULL DEFAULT 0.8;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS min_target_uplink_pusch_sinr integer NOT NULL DEFAULT 5;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS percentage_bad_rsrp_ratio_threshold float NOT NULL DEFAULT 1.2;
ALTER TABLE flm.cell_configuration_history ADD COLUMN IF NOT EXISTS min_connected_users integer NOT NULL DEFAULT 10;

ALTER TABLE flm.cell_configuration_history DROP COLUMN IF EXISTS lbt_for_initial_and_added_erab_estab_succ_rate CASCADE;
ALTER TABLE flm.cell_configuration_history DROP COLUMN IF EXISTS lbt_for_initial_and_added_erab_estab_succ_rate_for_qci1 CASCADE;
ALTER TABLE flm.cell_configuration_history DROP COLUMN IF EXISTS load_balancing_threshold_for_erab_percentage_lost CASCADE;
ALTER TABLE flm.cell_configuration_history DROP COLUMN IF EXISTS load_balancing_threshold_for_erab_percentage_lost_for_qci1 CASCADE;
ALTER TABLE flm.cell_configuration_history DROP COLUMN IF EXISTS load_balancing_threshold_for_cell_ho_succ_rate CASCADE;
ALTER TABLE flm.cell_configuration_history DROP COLUMN IF EXISTS load_balancing_threshold_for_cell_availability CASCADE;
ALTER TABLE flm.cell_configuration_history DROP COLUMN IF EXISTS load_balancing_threshold_for_endc_users CASCADE;

ALTER TABLE flm.cell_configuration_history ALTER COLUMN execution_id TYPE VARCHAR(255);

CREATE OR REPLACE VIEW public.cell_configuration_view AS SELECT * FROM flm.cell_configuration_history;

-- Adding default settings to the database

--
-- Data for Name: configuration_settings; Type: TABLE DATA; Schema: public; Owner: flm_service_user
-- Note: The default cron expression is to run nightly at 02:00 am
--

INSERT INTO flm.configuration_settings
VALUES (1, 'default', '0 0 2 ? * * *', true, true,
'{"qosForCapacityEstimation": "0.5", "percentileForMaxConnectedUser": "40.0", "minNumCellForCDFCalculation": "20", "targetPushBack":"2", "overrideCCalculator":"No", "minLbdarStepsize":"1", "maxLbdarStepsize": "[{\"BW\":\"1400\", \"value\":\"1\"}, {\"BW\":\"3000\", \"value\":\"2\"}, {\"BW\":\"5000\", \"value\":\"3\"}, {\"BW\":\"10000\", \"value\":\"10\"}, {\"BW\":\"15000\", \"value\":\"10\"}, {\"BW\":\"20000\", \"value\":\"10\"}]", "leakageThirdCell":"10", "leakageLbqImpact":"20", "existingHighPush":"30", "numberOfKpiDegradedHoursThreshold":"4", "paKpiSettings": "{\"cellHandoverSuccessRate\": {\"enableKPI\":true, \"confidenceInterval\":\"99\", \"relevanceThreshold\":\"99.90\"}, \"initialAndAddedERabEstabSrHourly\": {\"enableKPI\":true, \"confidenceInterval\":\"97.50\", \"relevanceThreshold\":\"99.90\"}, \"initialAndAddedERabEstabSrQci1Hourly\": {\"enableKPI\":true, \"confidenceInterval\":\"97.50\", \"relevanceThreshold\":\"99.90\"}, \"eRabRetainabilityPercentageLostHourly\": {\"enableKPI\":true, \"confidenceInterval\":\"97.50\", \"relevanceThreshold\":\"0.01\"}, \"eRabRetainabilityPercentageLostQci1Hourly\": {\"enableKPI\":true, \"confidenceInterval\":\"97.50\", \"relevanceThreshold\":\"0.01\"}, \"avgDlPdcpThroughputSector\": {\"enableKPI\":true, \"confidenceInterval\":\"99\"}, \"avgUlPdcpThroughputSector\": {\"enableKPI\":true, \"confidenceInterval\":\"99\"}}"}',
'{"targetThroughputR(Mbps)": "5.0", "deltaGFSOptimizationThreshold": "0.2", "targetSourceCoverageBalanceRatioThreshold": "0.9", "sourceTargetSamplesOverlapThreshold": "90.0", "targetSourceContiguityRatioThreshold": "0.7", "loadBalancingThresholdForInitialAndAddedErabEstabSuccRate": "98.0", "loadBalancingThresholdForInitialAndAddedErabEstabSuccRateForQci1": "98.5", "loadBalancingThresholdForErabPercentageLost": "2.0", "loadBalancingThresholdForErabPercentageLostForQci1": "1.5", "loadBalancingThresholdForCellHoSuccRate": "70.0", "loadBalancingThresholdForCellAvailability": "70.0", "optimizationSpeed": "normal", "loadBalancingThresholdForEndcUsers": "50.0", "essEnabled": true, "minimumSourceRetained":"10", "minRopsForAppCovReliability":"3", "minNumCqiSamples":"100", "minNumSamplesForTransientCalculation":"15", "sigmaForTransientCalculation":"3", "ulPuschSinrRatioThreshold":"0.8", "minTargetUlPuschSinr":"5", "percentageBadRsrpRatioThreshold":"1.2", "minConnectedUsers":"10"}', '[]', '[]', '[]', 'Saturday,Sunday', false) ON CONFLICT (id) DO NOTHING;

-- Set autoincrement setting to start at 1 or highest id to avoid conflict when creating new configurations
SELECT setval('flm.configuration_settings_id_seq', max(id)) FROM flm.configuration_settings;

-- Access control for service
GRANT ALL PRIVILEGES ON SCHEMA public TO flm_service_user WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO flm_service_user WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON SCHEMA flm TO flm_service_user WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA flm TO flm_service_user WITH GRANT OPTION;
ALTER ROLE flm_service_user SET search_path to flm,public;
ALTER ROLE flm_service_user WITH CREATEROLE;

REVOKE ALL ON ALL TABLES IN SCHEMA pg_catalog from public;

CREATE ROLE service_user;
GRANT SELECT ON ALL TABLES IN SCHEMA pg_catalog TO service_user;
GRANT service_user TO flm_service_user;

ALTER TABLE flm.configuration_settings OWNER TO flm_service_user;
ALTER TABLE flm.flm_executions OWNER TO flm_service_user;
ALTER TABLE flm.pa_executions OWNER TO flm_service_user;
ALTER TABLE flm.cell_configuration OWNER TO flm_service_user;
ALTER TABLE flm.cell_configuration_history OWNER TO flm_service_user;
ALTER TABLE flm.flm_optimizations OWNER TO flm_service_user;
ALTER TABLE flm.pa_output_events OWNER TO flm_service_user;
ALTER TABLE flm.flm_lbdar OWNER TO flm_service_user;

-- Add ON DELETE CASCADE to flm_execution_id column in flm.pa_executions table
ALTER TABLE flm.pa_executions DROP CONSTRAINT IF EXISTS pa_executions_flm_execution_id_fkey;
ALTER TABLE flm.pa_executions ADD CONSTRAINT pa_executions_flm_execution_id_fkey FOREIGN KEY(flm_execution_id) REFERENCES flm.flm_executions(id) ON DELETE CASCADE;

-- Add ON DELETE CASCADE to flm_execution_id column in flm.flm_optimizations table
ALTER TABLE flm.flm_optimizations DROP CONSTRAINT IF EXISTS flm_optimizations_flm_execution_id_fkey;
ALTER TABLE flm.flm_optimizations ADD CONSTRAINT flm_optimizations_flm_execution_id_fkey FOREIGN KEY(execution_id) REFERENCES flm.flm_executions(id) ON DELETE CASCADE;

-- Add ON DELETE CASCADE to flm_execution_id column in flm.cell_configuration table
ALTER TABLE flm.cell_configuration DROP CONSTRAINT IF EXISTS cell_configuration_execution_id_fkey;
ALTER TABLE flm.cell_configuration ADD CONSTRAINT cell_configuration_execution_id_fkey FOREIGN KEY (execution_id) REFERENCES flm.flm_executions(id) ON DELETE CASCADE;

-- Add ON DELETE CASCADE to pa_execution_id column in flm.pa_output_events table
ALTER TABLE flm.pa_output_events DROP CONSTRAINT IF EXISTS pa_output_events_pa_execution_id_fkey;
ALTER TABLE flm.pa_output_events ADD CONSTRAINT pa_output_events_pa_execution_id_fkey FOREIGN KEY(pa_execution_id) REFERENCES flm.pa_executions(id) ON DELETE CASCADE;
